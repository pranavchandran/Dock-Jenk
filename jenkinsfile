pipeline {
    agent none
    stages {
        stage('Build') {
            agent {
                docker {
                    image 'python:3.6-alpine'
                }
            }
            steps {
                sh 'python -m py_compile mycodes/hello.py'
                stash(name: ' compiled_results', includes: 'mycodes/*.py*')
            }
        }
        stage('Test') {
            agent {
                docker {
                    image 'qnib/pytest'
                }
            }
            steps {
                sh 'pytest --verbose --junit-xml test-reports/results.xml mycodes/test_hello.py'
            }
            post {
                always {
                    junit 'test-reports/results.xml'
                }
            }
        }
        stage('Deliver') {
            agent any
            environment {
            VOLUME = VOLUME = '$(pwd)/sources:/src'
            IMAGE = 'cdrx/pyinstaller-linux:python3.6'
        }
        steps {
            dir(path: env.BUILD_ID) {
                unstash(name: ' compiled_results')
                sh "docker run --rm -v ${VOLUME} ${IMAGE} 'pyinstaller -F hello.py'"
            }
        }
        post {
            success {
                archiveArtifacts "${env.BUILD_ID}/sources/dist/add2vals"
                sh "docker run --rm -v ${VOLUME} ${IMAGE} 'rm -rf build dist'"         
            }
        }
        
        }
    }
}